<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Categories - Expense Tracker</title>
  </head>
  <body>
    <h1>Expense Categories</h1>

    <nav>
      <a href="/homePage">Back to Dashboard</a>
      <a href="/expenses-page">View Expenses</a>
      <a href="/add-category">Add New Category</a>
      <a href="/auth/logout">Logout</a>
    </nav>

    <div id="categories-container">
      <p>Loading categories...</p>
    </div>

    <script>
      const categoriesContainer = document.getElementById(
        "categories-container"
      );

      async function initializeCategoriesDisplay() {
        try {
          const categories = await loadCategories();
          displayCategories(categories);
        } catch (error) {
          showError("Error loading categories: " + error.message);
        }
      }

      async function loadCategories() {
        const response = await fetch("/categories");
        return await response.json();
      }

      function displayCategories(categories) {
        if (categories.length === 0) {
          showEmptyState();
        } else {
          showCategoriesTable(categories);
        }
      }

      function showEmptyState() {
        categoriesContainer.innerHTML = `
        <p>No categories found.
           <a href="/add-category">Add your first category</a>
        </p>
    `;
      }

      function showCategoriesTable(categories) {
        const tableHeader = `
        <table border="1">
            <tr>
                <th>Name</th>
                <th>Created At</th>
                <th>Actions</th>
            </tr>
    `;

        const tableRows = categories
          .map((category) => createCategoryRow(category))
          .join("");
        const tableFooter = "</table>";

        categoriesContainer.innerHTML = tableHeader + tableRows + tableFooter;
      }

      function createCategoryRow(category) {
        const createdAt = formatDate(category.createdAt);

        return `
        <tr>
            <td>${category.name}</td>
            <td>${createdAt}</td>
            <td>
                <a href="/edit-category/${category._id}">Edit</a>
                <button onclick="deleteCategory('${category._id}')">Delete</button>
            </td>
        </tr>
    `;
      }

      function formatDate(dateString) {
        if (!dateString) {
          return "N/A";
        }

        try {
          return new Date(dateString).toLocaleDateString();
        } catch (error) {
          return "Invalid Date";
        }
      }

      function showError(message) {
        categoriesContainer.innerHTML = `<p class="error">${message}</p>`;
      }

      async function deleteCategory(id) {
        const confirmMessage =
          "Are you sure you want to delete this category? This will fail if any expenses use this category.";

        if (!confirm(confirmMessage)) {
          return;
        }

        try {
          await performCategoryDeletion(id);
          location.reload();
        } catch (error) {
          alert("Error deleting category: " + error.message);
        }
      }

      async function performCategoryDeletion(id) {
        const response = await fetch(`/categories/${id}`, {
          method: "DELETE",
        });

        const data = await response.json();

        if (data.message !== "Category deleted successfully") {
          throw new Error(data.message || "Failed to delete category");
        }
      }

      initializeCategoriesDisplay();
    </script>
  </body>
</html>
