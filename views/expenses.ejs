<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>View Expenses - Expense Tracker</title>
  </head>
  <body>
    <h1>Your Expenses</h1>

    <nav>
      <a href="/homePage">Back to Dashboard</a>
      <a href="/add-expense">Add New Expense</a>
      <a href="/categories-page">Manage Categories</a>
      <a href="/auth/logout">Logout</a>
    </nav>

    <div id="expenses-container">
      <p>Loading expenses...</p>
    </div>

    <script>
      let categories = {};
      const expensesContainer = document.getElementById("expenses-container");

      async function initializeExpenses() {
        try {
          await loadCategories();
          await loadAndDisplayExpenses();
        } catch (error) {
          displayError("Error loading expenses: " + error.message);
        }
      }

      async function loadCategories() {
        const response = await fetch("/categories");
        const data = await response.json();
        data.forEach((category) => {
          categories[category._id] = category.name;
        });
      }

      async function loadAndDisplayExpenses() {
        const response = await fetch("/expenses");
        const expenses = await response.json();
        if (expenses.length === 0) {
          displayNoExpenses();
        } else {
          displayExpensesTable(expenses);
        }
      }

      function displayNoExpenses() {
        expensesContainer.innerHTML = `
            <p>No expenses found.
            <a href="add-expense">Add your first expense</a>
            </p>
        `;
      }

      function displayExpensesTable(expenses) {
        const tableHeader = `
                <table border="1">
                    <tr>
                        <th>Name</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Date</th>
                        <th>Description</th>
                        <th>Type</th>
                        <th>Actions</th>
                    </tr>
            `;

        const tableRows = expenses
          .map((expense) => createExpenseRow(expense))
          .join("");
        const tableFooter = "</table>";

        expensesContainer.innerHTML = tableHeader + tableRows + tableFooter;
      }

      // Create a single expense row
      function createExpenseRow(expense) {
        const categoryName =
          categories[expense.categoryId] || "Unknown Category";

        return `
                <tr>
                    <td>${expense.name}</td>
                    <td>${categoryName}</td>
                    <td>${expense.price}</td>
                    <td>${expense.date}</td>
                    <td>${expense.description}</td>
                    <td>${expense.transactionType}</td>
                    <td>
                        <a href="/edit-expense/${expense._id}">Edit</a>
                        <button onclick="deleteExpense('${expense._id}')">Delete</button>
                    </td>
                </tr>
            `;
      }

      // Display error message
      function displayError(message) {
        expensesContainer.innerHTML = `<p>${message}</p>`;
      }

      // Delete an expense with confirmation
      async function deleteExpense(id) {
        if (!confirm("Are you sure you want to delete this expense?")) {
          return;
        }

        try {
          const response = await fetch(`/expenses/${id}`, {
            method: "DELETE",
          });

          if (response.ok) {
            location.reload();
          } else {
            alert("Error deleting expense");
          }
        } catch (error) {
          alert("Error deleting expense: " + error.message);
        }
      }
      initializeExpenses();
    </script>
  </body>
</html>
